INCLUDE "./include/hardware.inc"

SECTION "ShamanHutInside Tilemap", ROMX

ShamanHutInsideStart::
db $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $7b, $79, $79, $79, $79, $79, $79, $79, $79, $79, $79, $79, $79, $79, $79, $79, $79, $7a, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $61, $22, $24, $25, $2f, $76, $75, $76, $75, $77, $77, $76, $75, $2b, $23, $2b, $2f, $48, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $61, $57, $59, $45, $58, $4f, $64, $50, $66, $77, $77, $50, $66, $6a, $6a, $6a, $58, $48, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $61, $54, $36, $62, $30, $4f, $64, $3b, $5d, $77, $77, $50, $66, $36, $62, $40, $68, $48, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $61, $17, $1c, $1e, $19, $4f, $64, $42, $2d, $77, $77, $50, $66, $1c, $1e, $6c, $3e, $48, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $61, $17, $10, $03, $05, $18, $19, $01, $00, $76, $75, $17, $07, $10, $03, $41, $2e, $48, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $61, $17, $0f, $15, $05, $05, $05, $01, $01, $4f, $64, $17, $05, $0f, $15, $08, $09, $48, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $61, $17, $05, $05, $07, $05, $05, $18, $18, $4f, $64, $17, $05, $05, $05, $0b, $12, $48, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $61, $17, $05, $05, $05, $05, $05, $05, $05, $4f, $64, $16, $05, $05, $05, $05, $05, $48, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $61, $17, $05, $05, $40, $68, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $48, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $61, $17, $08, $09, $6d, $3f, $08, $09, $05, $05, $05, $05, $05, $05, $05, $34, $5b, $48, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $61, $17, $0b, $12, $6c, $39, $0b, $12, $05, $05, $05, $05, $05, $05, $05, $74, $73, $48, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $61, $17, $05, $05, $41, $2e, $05, $05, $05, $05, $05, $05, $05, $05, $06, $4d, $63, $48, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $60, $70, $70, $70, $70, $70, $70, $70, $70, $70, $71, $06, $05, $72, $70, $70, $70, $47, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $61, $17, $05, $48, $7e, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $61, $17, $05, $48, $7e, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
ShamanHutInsideEnd::

ShamanHutInsideLoad::
    ld de, InsideStart
    ld hl, $9000  ; Tileblock 2
    ld bc, InsideEnd - InsideStart
    call Memcopy

    ld de, ShamanHutInsideStart
    ld hl, $9800  ; Tilemap 0
    ld bc, ShamanHutInsideEnd - ShamanHutInsideStart
    call Memcopy

    ld a, $1f
    ld [wUnwalkableTileIdx], a

    ld hl, wCurrentMapCheckExits         ; Point HL to wCurrentMapCheckExits
    ld [hl], LOW(ShamanHutInsideCheckExit)        ; Store the low byte
    inc hl                               ; Move to the high byte
    ld [hl], HIGH(ShamanHutInsideCheckExit)       ; Store the high byte

    call UpdatePlayerObject
    ret

ShamanHutInsideCheckExit::
    ; first check x coordinate
    ld a, [wPlayerX]
    cp a, 96
    jp z, .checkY0
    ret

    ; if there is a match, check y coordinate

.checkY0
.subcheck0_0
    ld a, [wPlayerY]
    cp a, 128
    jp nz, .subcheck0_1
    ld a, 80
    ld [wPlayerX], a
    ld a, 64
    ld [wPlayerY], a
    ld a, 8
    ld [wVBlankCount], a
    call WaitForVBlankFunction ; wait for 8 VBlanks, since otherwise the game can crash if levels are changed to quickly
    call TurnLcdOff
    call ShamanHutOutsideLoad
    jp .final0
.subcheck0_1
    ret
.final0
    ld a, LCDCF_ON | LCDCF_BGON | LCDCF_OBJON
    ld [rLCDC], a
    ret

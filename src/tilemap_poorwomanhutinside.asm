INCLUDE "./include/hardware.inc"

SECTION "PoorWomanHutInside Tilemap", ROMX, BANK[1]

PoorWomanHutInsideStart::
db $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $7e, $7e, $7e, $7b, $79, $79, $79, $79, $79, $79, $79, $79, $79, $79, $7a, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $7e, $7e, $7e, $61, $22, $2b, $23, $2f, $76, $75, $4b, $53, $4a, $56, $48, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $7e, $7e, $7e, $61, $57, $69, $6a, $58, $50, $66, $5a, $7c, $7d, $37, $48, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $7e, $7e, $7e, $61, $54, $36, $62, $30, $4e, $65, $4b, $53, $4a, $56, $48, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $7e, $7e, $7e, $61, $17, $1c, $1e, $19, $49, $44, $5a, $7c, $7d, $37, $48, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $7e, $7e, $7e, $61, $17, $10, $03, $08, $09, $05, $01, $01, $00, $01, $48, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $7e, $7e, $7e, $61, $17, $0f, $15, $0b, $12, $40, $68, $08, $09, $05, $48, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $7e, $7e, $7e, $61, $17, $05, $05, $08, $09, $6f, $6e, $0b, $12, $05, $48, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $7e, $7e, $7e, $61, $17, $05, $05, $0b, $12, $41, $2e, $05, $05, $05, $48, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $7e, $7e, $7e, $61, $17, $05, $05, $05, $05, $05, $05, $05, $05, $05, $48, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $7e, $7e, $7e, $61, $17, $05, $05, $05, $05, $05, $05, $05, $05, $05, $48, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $7e, $7e, $7e, $60, $70, $70, $70, $70, $70, $70, $71, $06, $05, $72, $47, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $61, $17, $05, $48, $7e, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $61, $17, $05, $48, $7e, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
PoorWomanHutInsideEnd::

PoorWomanHutInsideLoad::
    ld de, InsideStart
    ld hl, $9000  ; Tileblock 2
    ld bc, InsideEnd - InsideStart
    call Memcopy

    ld de, PoorWomanHutInsideStart
    ld hl, $9800  ; Tilemap 0
    ld bc, PoorWomanHutInsideEnd - PoorWomanHutInsideStart
    call Memcopy

    ld a, $1f
    ld [wUnwalkableTileIdx], a

    ld hl, wCurrentMapCheckExits         ; Point HL to wCurrentMapCheckExits
    ld [hl], LOW(PoorWomanHutInsideCheckExit)        ; Store the low byte
    inc hl                               ; Move to the high byte
    ld [hl], HIGH(PoorWomanHutInsideCheckExit)       ; Store the high byte

    call UpdatePlayerObject
    ret

PoorWomanHutInsideCheckExit::
    ; first check x coordinate
    ld a, [wPlayerX]
    cp a, 96
    jp z, .checkY0
    ret

    ; if there is a match, check y coordinate

.checkY0
.subcheck0_0
    ld a, [wPlayerY]
    cp a, 128
    jp nz, .subcheck0_1
    ld a, 32
    ld [wPlayerX], a
    ld a, 56
    ld [wPlayerY], a
    ld a, 8
    ld [wVBlankCount], a
    call WaitForVBlankFunction ; wait for 8 VBlanks, since otherwise the game can crash if levels are changed to quickly
    call TurnLcdOff
    call PoorWomanHutOutsideLoad
    jp .final
.subcheck0_1
    ret
.final
    ld a, LCDCF_ON | LCDCF_BGON | LCDCF_OBJON
    ld [rLCDC], a
    ret
